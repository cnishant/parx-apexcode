<apex:component allowDML="true" language="{!$CurrentPage.parameters.l}">
<apex:attribute name="pkbCon" type="pkb_Controller" required="true" description="handle to the pkb controller" />
<apex:attribute name="showFeedbackYesNo" type="Boolean" required="true" description="flag to indicate if Yes/No buttons should be shown" />
<apex:attribute name="showBackLinks" type="Boolean" required="true" description="flag to indicate if 'back to...' buttons should be shown" />

<apex:variable var="pageNum" value="{!pkbCon.pageNumParam}={!pkbCon.currPage}" />

<style>
	 .secondaryPalette, .bPageBlock .pbHeader {
	    background-color: transparent;
	    
	}
	 .individualPalette .secondaryPalette {
	    border-color: transparent;
	}
	.labelCol {
	   display:none;
	}
    .bPageBlock .pbBody {
         padding: 0;
    }
    .bPageTitle .ptBody .pageType {
		font-size: 18px;
	}
	.bPageTitle {
        margin-bottom: 0px;
    }
    .pbHeader {
        display: none;
    }
</style>


    <h2 class="section">&nbsp;</h2>

    <div class="articleViewIcons">
      <c:pkb_articleicons pkbCon="{!pkbCon}" />
    </div>

      <apex:outputPanel layout="block" rendered="{!showBackLinks}" >
          <apex:outputText rendered="{!pkbCon.displaySearchResultsLink}">
            <a class="relatedLink" href="{!$Site.CurrentSiteUrl}?{!pkbCon.allSearchParams}&{!pageNum}">&lt; {!$Label.PKB2_Back_To_Results}</a>
          </apex:outputText>
          <apex:outputText rendered="{!NOT(pkbCon.displaySearchResultsLink)}">
            <a class="relatedLink" href="{!$Site.CurrentSiteUrl}">&lt; {!$Label.PKB2_Back_To_Search_Page}</a>
          </apex:outputText>
      </apex:outputPanel>
<br/>
    <div style="width: 100%;" id="articleContainer">
<!-- max-height:480px;overflow:auto; -->
      <apex:insert name="body"/>

      <apex:outputPanel layout="block" style="margin-top: 20px; margin-bottom: 20px;" rendered="{!NOT(pkbCon.isSite)}">
      <i>Viewing the PKB from a normal salesforce url (instead of through a Sites url) is for testing purposes only. No article content will render on this page, 
      but all other PKB functionality can be tested.</i>
      </apex:outputPanel>
    </div>
 
  <apex:outputPanel layout="block" styleClass="feedbackContainer" rendered="{!showFeedbackYesNo}">
    <c:pkb_feedbackyesno pkbCon="{!pkbCon}" />
  </apex:outputPanel>

</apex:component>