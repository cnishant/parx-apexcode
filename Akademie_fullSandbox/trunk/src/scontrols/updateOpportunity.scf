<html><head>
<script type="text/javascript">
  	var DEBUG = false;

	if (DEBUG)	{
		document.write('<script language="javascript" src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js?browser=true" type="text/javascript"><\/script>');
	}
	else	{
		document.write('<script language="javascript" src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js" type="text/javascript"><\/script>');
	}
</script>

<script src="/soap/ajax/10.0/connection.js"></script>

<script type="text/javascript">

	// brauch ich global, da in mehreren funktionen benoetigt
	var ppid="{!Opportunity.Vorheriges_Produkt__c}";
	
	function initPage()	{
		sforceClient.init("{!API.Session_ID}", "{!API.Partner_Server_URL_90}", false);
		setTimeout("start()", 500);
		var outputsave="Einen Moment bitte, Daten werden aktualisiert.";
		var textNode = document.createTextNode(outputsave);
		document.getElementById("outputsave").innerHTML = outputsave;
	}
	
	function writeProductToLineItems(pid,discount) {
		var queryoppli="Select l.Id, l.OpportunityId, l.PricebookEntryId, l.UnitPrice, l.ListPrice From OpportunityLineItem l Where l.OpportunityId='{!Opportunity.Id}'";
		var querypricebook="Select b.Id, b.Product2Id From PricebookEntry b Where b.Id='";
		var querypb="Select b.Id, b.Product2Id, b.UnitPrice From PricebookEntry b Where b.Product2Id='" + pid + "'";
		
		var retval=false;
		// erstmal test, ob wir das Produkt schon drin haben, d. h. ob es schon LineItems gibt
		// und das Produkt darin das gesuchte ist
	// LineItems der Opp
		var queryoppliResult = sforceClient.query(queryoppli);
		if (queryoppliResult.className == "Fault") {
			alert("There was an error: " + queryoppliResult.toString());
		} else {
			if (queryoppliResult.size > 0) {
				for (var j=0;j<queryoppliResult.records.length;j++) {
					var oppliDynaBean = queryoppliResult.records[j];
	
	// ProductIds aus den Pricebooks
					var querypricebookResult = sforceClient.query(querypricebook + oppliDynaBean.get("PricebookEntryId") + "'");
					if (querypricebookResult.className == "Fault") {
						alert("There was an error: " + querypricebookResult.toString());
					} else {
						if (querypricebookResult.size == 1) {
							var pricebookDynaBean = querypricebookResult.records[0];
							
							testpid=pricebookDynaBean.get("Product2Id");
						} else {
							alert("There was an error, too many products in pricebook!");
						}
					}
					// wenn das erste Produkt nicht mit dem aus der Nachschlagebeziehung uebereinstimmt, schreiben wir unser Prod rein
					if (j==0 & testpid!=pid) {
						retval=true;
						//ppid=testpid;
						// ers ma loeschen
						var dSR = sforceClient.Delete(oppliDynaBean.get("Id"));
						//alert(dSR);
						// neues Objekt
						var li = new sforce.SObject("OpportunityLineItem");
						var pbResult = sforceClient.query(querypb);
						if (pbResult.className == "Fault") {
							alert("There was an error: " + pbResult.toString());
						} else {
							if (pbResult.size == 1) {
								var pbDynaBean = pbResult.records[0];
								li.OpportunityId="{!Opportunity.Id}";
								li.PricebookEntryId=pbDynaBean.get("Id");
								li.Quantity=1;
								li.UnitPrice=pbDynaBean.get("UnitPrice");
								//alert("Discount: " + discount);
								if (discount>0) {
									li.UnitPrice=pbDynaBean.get("UnitPrice")-pbDynaBean.get("UnitPrice")*discount/100;
									li.Rabatt__c=discount;
								}
								var oppliSR = sforce.connection.upsert("Id", [li]);
								if (oppliSR[0].id==null) {
									alert("Fehler beim Aktualisieren des Produktes" + oppliSR.toString());
								}
							} else {
								alert("There was an error, too many pricebooks for product " + pid +"!");
							}
						}	
					} else {
						// alle anderen Produkte haben hier nichts zu suchen und werden geloescht
						//if (j>0) var oppliSR = sforceClient.Delete(oppliDynaBean.get("Id"));
					}		
				}
			} else {
				retval=true;
				// noch kein LineItem, damit auch noch kein Produkt
				// wir brauchen die Daten zum Produkt
				var pbResult = sforceClient.query(querypb);
				if (pbResult.className == "Fault") {
					alert("There was an error: " + pbResult.toString());
				} else {
					if (pbResult.size == 1) {
						var pbDynaBean = pbResult.records[0];
						
						// neues LineItem Objekt
						var li = new sforce.SObject("OpportunityLineItem");
						li.OpportunityId="{!Opportunity.Id}";
						li.PricebookEntryId=pbDynaBean.get("Id");
						li.Quantity=1;
						li.UnitPrice=pbDynaBean.get("UnitPrice");
						//alert("Discount: " + discount);
						if (discount>0) {
							li.UnitPrice=pbDynaBean.get("UnitPrice")-pbDynaBean.get("UnitPrice")*discount/100;
							li.Rabatt__c=discount;
						}
						var liSR = sforce.connection.upsert("Id", [li]);
						if (liSR[0].id==null) {
							alert("Fehler beim Aktualisieren des Produktes " +liSR.toString());
						}
					} else {
						alert("There was an error, too many pricebooks for product" + pid +"!");
					}
				}
			}
		}
		return retval;	
	}
	
	function fillStage(stage) {
		var retval=true;
		var queryopp="Select o.Id, o.StageName From Opportunity o Where o.Id='{!Opportunity.Id}'";
		var ocResult=sforceClient.query(queryopp);
		if (ocResult.className == "Fault") {
			alert("There was an error: " + ocResult.toString());
		} else {
			if (ocResult.size > 0) {
				for (var i=0;i<ocResult.records.length;i++) {
					var ocDynaBean = ocResult.records[i];
					ocDynaBean.set("Vorherige_Phase__c",stage);
					
					var ocSR=sforceClient.update(ocDynaBean);
					if (ocSR[0].id==null) {
						retval=false;
						alert("Fehler beim Aktualisieren der vorherigen Phase");
					}
				}
			}
		}
		return retval;	
	}
	
	function reducePreProduct(fieldName,price) {
		var query="Select Id, Umsatz_netto__c, "+ fieldName + " From Product2 Where Id='" + ppid + "'";
		var pR=sforceClient.query(query);
		if (pR.className == "Fault") {
			alert("There was an error: " + pR.toString());
		} else {
			if (pR.size > 0) {
				for (var i=0;i<pR.records.length;i++) {
					var pDB = pR.records[i];
					pDB.set(fieldName,pDB.get(fieldName)-1);
					if (fieldName=="Anmeldungen__c") pDB.set("Umsatz_netto__c",pDB.get("Umsatz_netto__c")-price);
					var pSR=sforceClient.update(pDB);
					if (pSR[0].id==null) {
						alert("Fehler beim Aktualisieren des vorherigen Produktes");
					}
				}
			}
		}
	}
	
	function getProductPrice(id) {
		var retval=0;
		var querypb="Select Id, UnitPrice, Product2Id From PricebookEntry Where Product2Id='"+ id + "'";
		var pbResult = sforceClient.query(querypb);
		if (pbResult.className == "Fault") {
			alert("There was an error: " + pbResult.toString());
		} else {
			if (pbResult.size == 1) {
				var pbDynaBean = pbResult.records[0];
				retval=pbDynaBean.get("UnitPrice");
			}
		}
		return retval;
	}
	
	function start() {
		var queryopp="Select o.Id, o.Name, o.MwSt_Satz__c, o.Stornokosten__c, o.Seminarteilnehmer__c, o.CloseDate, o.Sofortrabatt__c, o.AccountId, o.StageName, o.Seminar__c, o.Vorherige_Phase__c, o.Vorheriger_Betrag__c, o.Vorheriger_Teilnehmer__c, o.Vorheriges_Produkt__c, o.Umsatz_Seminar__c, o.Abreisetag__c, o.Anreisetag__c, o.Beginndatum__c, o.Endedatum__c, o.Stornogeb_hr__c From Opportunity o Where o.Id='{!Opportunity.Id}'";
		var queryp="Select p.Id, p.IsActive, p.Name, p.Stornoumsatz__c, p.Stornos__c, p.Absagen__c, p.MwSt__c, p.Seminargebuehr__c, p.Anmeldungen__c, p.Gaeste__c, p.Warteliste__c, p.Reservierungen__c, p.Umsatz_netto__c, p.ProductCode, p.Seminarbeginn__c, p.Seminarende__c From Product2 p Where p.Id='";
		var queryc="Select c.Id, c.LastName, c.FirstName, c.AccountId From Contact c Where c.Id='";
		
		var stage="{!Opportunity.StageName}";
		var stage_p="{!Opportunity.Vorherige_Phase__c}";
		var amount="{!Opportunity.Umsatz_Seminar__c}";
		var pamount="{!Opportunity.Vorheriger_Betrag__c}";
		var pidname="{!Opportunity.Seminar__c}";
		var ppidname="{!Opportunity.Vorheriges_ProduktName__c}";
		
		var anmeldung=0;
		var reservierung=0;
		var warteliste=0;
		var gaeste=0;
		var absagen=0;
		var stornos=0;
		var daybefor= new Date();
		var dayafter= new Date();
		var todo=false;
		var prodchange=false;
		var attendeechange=false;
		var oppupdate=false;
		var pupdate=false;
		var qr="";
		var umsatz=0;
		var d = new Date();
		var localTime = d.getTime();
		var localOffset=d.getTimezoneOffset() * 60000;
		
		// pruefen wir, was es zu tun gibt
		//alert('stage'+stage);
		//alert('stage_p'+stage_p);
		if ((stage!=stage_p)) {
			if ((stage_p=="Neu" | stage_p=="Angebot" | stage_p=="Verhandlung" | stage_p=="") & (stage=="Anmeldung" | stage=="Reservierung" | stage=="Warteliste" | stage=="Gast")) {
				if (stage=="Anmeldung") anmeldung++;
				if (stage=="Reservierung") reservierung++;
				if (stage=="Warteliste") warteliste++;
				if (stage=="Gast") gaeste++;
			}
			else if ( (stage_p=="Reservierung" | stage_p=="Warteliste") & (stage=="Neu" | stage=="Verhandlung" | stage=="Angebot") ) {
				if (stage_p=="Reservierung") reservierung--;
				if (stage_p=="Warteliste") warteliste--;
			}
			else if ( (stage_p=="Warteliste" | stage_p=="Reservierung") & stage=="Anmeldung") {
				if (stage_p=="Warteliste") warteliste--;
				if (stage_p=="Reservierung") reservierung--;
				anmeldung++;
			}
			else if ( (stage_p=="Warteliste" | stage_p=="Reservierung") & stage=="Gast") {
				if (stage_p=="Warteliste") warteliste--;
				if (stage_p=="Reservierung") reservierung--;
				gaeste++;
			}
			else if (stage_p=="Reservierung" & stage=="Warteliste") {
				reservierung--;
				warteliste++;
			}
			else if (stage_p=="Reservierung" & stage=="Absage") {
				reservierung--;
				//absagen++;
			}
			else if (stage_p=="Warteliste" & stage=="Reservierung") {
				warteliste--;
				reservierung++;
			}
			else if ((stage_p=="Anmeldung" | stage_p=="Rechnung") & stage=="Storno") {
				anmeldung--;
				stornos++;
			}
			else if ( stage_p=="Gast" & stage=="Storno") {
				gaeste--;
				stornos++;
			} 
			todo=true;
		}
		
		/*
		if (ppid=="" | ppid==null) {
			if (stage=="Anmeldung") anmeldung++;
			if (stage=="Reservierung") reservierung++;
			if (stage=="Warteliste") warteliste++;
			if (stage=="Gast") gaeste++;
			todo=true;
		}
		*/
		
		// wenn die Kontrollphase noch leer ist, muessen wir sie befuellen
		if (stage_p==null | stage_p=="") { 
			if (fillStage(stage)) stage_p==stage;
			todo=true;
		}
		
		// schreiben wir das LineItem unbedingt vor allem anderen, damit der Betrag (Umsatz_Seminar__c) stimmt
		if ((pidname!=ppidname) | (ppidname=="")) {
			var qr="";
			qr="Select Id, Seminar__c, Seminarteilnehmer__c From Opportunity Where Id='{!Opportunity.Id}'";
			var queryoppResult = sforceClient.query(qr);	
			if (queryoppResult.className == "Fault") {
				alert("There was an error: " + queryoppResult.toString());
			} else {
				if (queryoppResult.size > 0) {
					for (var i=0;i<queryoppResult.records.length;i++) {
						var oppDynaBean = queryoppResult.records[i];
						qr="Select Id, AccountId From Contact Where Id='" + oppDynaBean.get("Seminarteilnehmer__c") + "'";
						var qcR = sforceClient.query(qr);
						if (qcR.className == "Fault") {
							alert("There was an error: " + qcR.toString());
						} else {
							if (qcR.size > 0) {
								for (var n=0;n<qcR.records.length;n++) {
									var cDB = qcR.records[n];
									
									qr="Select Id, Sofortrabatt__c, Rahmenvertragskunde__c From Account Where Id='" + cDB.get("AccountId")+ "'";
									var queryaccResult = sforceClient.query(qr);
									if (queryaccResult.className == "Fault") {
										alert("There was an error: " + queryaccResult.toString());
									} else {
										if (queryaccResult.size > 0) {
											for (var j=0;j<queryaccResult.records.length;j++) {
												var accDynaBean = queryaccResult.records[j];
												writeProductToLineItems(oppDynaBean.get("Seminar__c"),accDynaBean.get("Sofortrabatt__c"));
												
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		 
		// Von nun an ist der Preis immer der Opp Betrag!
		
		// jetzt geht es richtig los
		var queryoppResult = sforceClient.query(queryopp);
		
		if (queryoppResult.className == "Fault") {
			alert("There was an error: " + queryoppResult.toString());
		} else {
			if (queryoppResult.size > 0) {
				for (var i=0;i<queryoppResult.records.length;i++) {
					var oppDynaBean = queryoppResult.records[i];
					oppDynaBean.set("Vorherige_Phase__c",stage);
					oppDynaBean.set("Vorheriger_Betrag__c",oppDynaBean.get("Umsatz_Seminar__c"));
					var oppSR=sforceClient.update(oppDynaBean);
					if (oppSR[0].id==null | oppSR[0].id=="" ) {
						alert("Fehler beim Aktualisieren der Vorherigen Phase: " + oppSR[0].toString());
					} else {
						// erst wenn die Phase erfolgreich gespeichert wurde ...
						
												
		// Produkte
						var querypResult = sforceClient.query(queryp + oppDynaBean.get("Seminar__c") + "'");
						if (querypResult.className == "Fault") {
							alert("There was an error: " + querypResult.toString());
						} else {
							if (querypResult.size > 0) {
								for (var h=0;h<querypResult.records.length;h++) {
									var pDynaBean = querypResult.records[h];
		// Da sind sie nun unsere Produkte
		
									// wenn das Kontrollprodukt noch leer ist muessen wir es befuellen
									if (ppid==null | ppid=="" ) {
										oppDynaBean.set("Vorheriges_Produkt__c",pDynaBean.get("Id"));
										oppDynaBean.set("Vorheriges_ProduktName__c",pDynaBean.get("Name"));
										// MwSt Satz aus Prod in Opp
										oppDynaBean.set("MwSt_Satz__c",pDynaBean.get("MwSt__c"));
										oppupdate=true;
									}
																
									if (ppid!=pDynaBean.get("Id")) {
										oppDynaBean.set("Vorheriges_Produkt__c",pDynaBean.get("Id"));
										oppDynaBean.set("Vorheriges_ProduktName__c",pDynaBean.get("Name"));
										// MwSt Satz aus Prod in Opp
										prodchange=true;
															
										// wenn ein Prodwechsel stattgefunden hat, muessen wir das bei den Teilnehmerdaten beruecksichtigen
										// Stornokosten bleiben unberuecksichtigt, da die Annahme war ist, dass Produktwechsel nicht nach Rechnungsst.
										// stattfinden
										if ( stage_p=="Reservierung" ) {
											pDynaBean.set("Reservierungen__c",pDynaBean.get("Reservierungen__c")+1);
											pupdate=true;
											reducePreProduct("Reservierungen__c",0);
										}
										//if ( stage_p=="Absage" ) {
										//	pDynaBean.set("Absagen__c",pDynaBean.get("Absagen__c")+1);
										//	pupdate=true;
										//	reducePreProduct("Absagen__c",0);
										//}
										if ( stage_p=="Anmeldung" | stage_p=="Rechnung" ) {
											pDynaBean.set("Anmeldungen__c",pDynaBean.get("Anmeldungen__c")+1);
											pDynaBean.set("Umsatz_netto__c",pDynaBean.get("Umsatz_netto__c")+oppDynaBean.get("Umsatz_Seminar__c"));
											pupdate=true;
											if (amount==pamount) {
												reducePreProduct("Anmeldungen__c",amount);
											} else {
												reducePreProduct("Anmeldungen__c",pamount);
											}
										}
										if ( stage_p=="Warteliste" ) {
											pDynaBean.set("Warteliste__c",pDynaBean.get("Warteliste__c")+1);
											pupdate=true;
											reducePreProduct("Warteliste__c",0);
										}
										// MwSt Satz aus Prod in Opp
										//alert("MWST "+pDynaBean.get("MwSt__c"));
										oppDynaBean.set("MwSt_Satz__c",pDynaBean.get("MwSt__c"));
										oppupdate=true;
									}
		
									// erstmal schreiben wir alles in die Opp
									// pruefen, ob ein Teilnehmerwechsel stattgefunden hat
									if (oppDynaBean.get("Seminarteilnehmer__c")!=oppDynaBean.get("Vorheriger_Teilnehmer__c")) {
										oppDynaBean.set("Vorheriger_Teilnehmer__c",oppDynaBean.get("Seminarteilnehmer__c"));
										oppupdate=true;
										attendeechange=true;
									}
									// Oppname und Accountname
									if (attendeechange | prodchange) {
										var querycResult = sforceClient.query(queryc + oppDynaBean.get("Seminarteilnehmer__c") + "'");
										if (querycResult.className == "Fault") {
											alert("There was an error: " + querycResult.toString());
										} else {
											if (querycResult.size > 0) {
												for (var c=0;c<querypResult.records.length;c++) {
													var cDynaBean = querycResult.records[c];
																			
													if (oppDynaBean.get("AccountId")==null | prodchange | attendeechange) {
														//alert("CAccountID: " + cDynaBean.get("AccountId"));
														oppDynaBean.set("AccountId",cDynaBean.get("AccountId"));
														oppupdate=true;
													}
													if (oppDynaBean.get("Name")=="[Name wird berechnet]" | prodchange | attendeechange) {
														oppDynaBean.set("Name","" + pDynaBean.get("ProductCode") + " - " + cDynaBean.get("LastName") + ", " + cDynaBean.get("FirstName"));
														oppupdate=true;
													}
												}
											}
										}
									}
									// Rabatt
									qr="Select Id, Sofortrabatt__c,Rahmenvertragskunde__c From Account Where Id='" + oppDynaBean.get("AccountId") + "'";
									var qrR=sforceClient.query(qr);
									if (qrR.className == "Fault") {
										alert("There was an error: " + qrR.toString());
									} else {
										if (qrR.size > 0) {
											for (var r=0;r<qrR.records.length;r++) {
												var account = qrR.records[r];
												if (account.get("Sofortrabatt__c")!=null) {
													oppDynaBean.set("Sofortrabatt__c",account.get("Sofortrabatt__c"));
													oppupdate=true;
												}
												if (account.get("Rahmenvertragskunde__c")!=null) {
													oppDynaBean.set("Rahmenvertragskunde__c",account.get("Rahmenvertragskunde__c"));
													oppupdate=true;
												}
											}
											account=null;
										}
									}
															
									// Anreisetag
									if (oppDynaBean.get("Anreisetag__c")==null | prodchange) {
										dayafter=pDynaBean.get("Seminarbeginn__c");
										var AbsDaybefor=dayafter.getTime()-(1 * 24 * 60 * 60 * 1000);
										daybefor.setTime(AbsDaybefor-localOffset);
										oppDynaBean.set("Anreisetag__c",daybefor);
										oppDynaBean.set("CloseDate",pDynaBean.get("Seminarbeginn__c"));
										oppupdate=true;
									}
									// Abreisetag
									if (oppDynaBean.get("Abreisetag__c")==null | prodchange) {
										oppDynaBean.set("Abreisetag__c",pDynaBean.get("Seminarende__c"));
										oppupdate=true;
									}
									// Beginndatum
									if (oppDynaBean.get("Beginndatum__c")==null | prodchange) {
										oppDynaBean.set("Beginndatum__c",pDynaBean.get("Seminarbeginn__c"));
										oppupdate=true;
									}
									// Endedatum
									if (oppDynaBean.get("Endedatum__c")==null | prodchange) {
										oppDynaBean.set("Endedatum__c",pDynaBean.get("Seminarende__c"));
										oppupdate=true;
									}
																
									// nun fuehren wir die Produkt Berechnungen durch
									if (todo) {
										pDynaBean.set("Anmeldungen__c",pDynaBean.get("Anmeldungen__c") + anmeldung);
										pDynaBean.set("Warteliste__c",pDynaBean.get("Warteliste__c") + warteliste);
										pDynaBean.set("Reservierungen__c",pDynaBean.get("Reservierungen__c") + reservierung);
										pDynaBean.set("Gaeste__c",pDynaBean.get("Gaeste__c") + gaeste);
										pDynaBean.set("Stornos__c",pDynaBean.get("Stornos__c") + stornos);
										//pDynaBean.set("Absagen__c",pDynaBean.get("Absagen__c") + absagen);
										
										umsatz=pDynaBean.get("Umsatz_netto__c");
										//alert("Sage: " + stage + " Ameldung: " + anmeldung + " Umsatz: " + umsatz);						
										if ((anmeldung==1 | anmeldung==-1) & (stage!="Storno")) pDynaBean.set("Umsatz_netto__c",umsatz+oppDynaBean.get("Umsatz_Seminar__c")*anmeldung);
										pupdate=true;
									}
																
									// Update des Produkts
									if (pupdate) {
										var pSR = sforceClient.update(pDynaBean);
										if (pSR[0].id==null) {
											alert("Fehler beim Aktualisieren des Produktes " + pDynaBean.get("Name"));
										}
									}
																
									// Update der Opp
									if (oppupdate) {
										var opp2SR=sforceClient.update(oppDynaBean);
										if (opp2SR[0].id==null | opp2SR[0].id=="" ) {
											alert("Fehler beim Aktualisieren der Opportunity: " + opp2SR.toString());
										}
									}
								}
							} else {
								alert("Fehler bei der Produktabfrage");
							}
						}
					}
				}
			} else {
				alert("Fehler bei der Opportunityabfrage");
			}
		}
		this.location.href = "{!URLFOR($Action.Opportunity.View,  Opportunity.Id, [retUrl=URLFOR($Action.Opportunity.View,  Opportunity.Id)], false)}";
	
	}											


</script>

<title>updateOpportunity</title>
<link href="/css/ie_global.css" rel="stylesheet" type="text/css">
<link href="/css/ie_navigation.css" rel="stylesheet" type="text/css">

<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1184184680000/Theme2/default/elements.css"/>

<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1184184680000/Theme2/default/common.css"/>

<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1184184680000/Theme2/default/rlHovers.css"/>
<link type="text/css" rel="stylesheet" media="aural,braille,embossed" href="/css/assistive.css"/>
<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1178748826000/Theme2/dStandard.css"/>
<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1185871842000/Theme2/00D200000000CmN/00520000000hAXe/dCustom.css"/>
<link type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" href="/sCSS/9.0/1184184680000/Theme2/default/extended.css"/>

</head>
	<body style="background-color:#f3f3ec;" onload="javascript:initPage();" >
    <center>
      <br>
      <table style="display: block" border="0" width="100%" id="progressDisplay">
      <tr><td colspan="3" height="30"/></tr>
      <tr><td/><td width="100%" align="CENTER" nowrap class="status" id="progressMsg"/>
      <div id="outputsave"></div>
      </td></tr>
      <tr><td colspan="3" height="15"/></tr>
      <tr><td/><td width="100%" align="CENTER"><img src="/img/waiting_dots.gif"/></td><td/></tr>
      </table><br>
    </center>
	</body>
</html>